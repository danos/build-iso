#!/bin/sh
# shellcheck disable=SC2039

set -e

LIVE_BUILD_DIR=/live-build
LB_CONFIG_BUILD="${LIVE_BUILD_DIR}/config/build"
LB_CONFIG_DIR="${LIVE_BUILD_DIR}/config"

USER_ISOLATION_PKG=vyatta-system-login-user-isolation-v1-yang

# shellcheck source=/dev/null
[ -f ${LB_CONFIG_DIR}/common ] && . ${LB_CONFIG_DIR}/common

get_lb_cfg()
{
    grep "^${1}:" ${LB_CONFIG_BUILD} | cut -d':' -f2- | sed -e 's|^ ||' -e 's| $||'
}

# Create the sandbox chroot only if the we have the user-isolation package.
check_user_isolation()
{
	VER=$(dpkg-query --show -f='${Version}' ${USER_ISOLATION_PKG})
	[ -n "${VER}" ] || return 1
}

# Install mmdebstrap - at this stage we still should have the sources.list pointing
# to LB repos
delete_bootstrap='no'
hook_mmdebstrap()
{
	if [ "${1}" = install ]; then
		[ ! -x /usr/bin/mmdebstrap ] || return 0
		case "${LB_APT}" in
			apt|apt-get)
				# shellcheck disable=SC2086
				apt-get ${APT_OPTIONS} install mmdebstrap
				;;
			aptitude)
				# shellcheck disable=SC2086
				aptitude ${APTITUDE_OPTIONS} install mmdebstrap
				;;
		esac
		delete_bootstrap=yes
	else
		[ "${delete_bootstrap}" = 'yes' ] || return 0
		apt-get -y purge mmdebstrap 
	fi
}

cli_sandbox()
{
    # Get Architectures for the bootstrap.
    local ARCH
    local DIST

    ARCH="$(get_lb_cfg Architecture)"
    DIST="$(get_lb_cfg Distribution)"

    local R=${1}
    local includes="${2}"
    
    local opts="--arch=${ARCH} --variant=minbase"
    if [ -n "${includes}" ]; then
	    opts="${opts} --include=${includes}"
    fi

    # shellcheck disable=SC2016
    local ess_hook='if [ -d /.build.binaries ]; then mkdir "$1/.build.binaries"; mount --bind /.build.binaries "$1/.build.binaries"; fi'
    # shellcheck disable=SC2016
    local cus_hook='if [ -d "$1/.build.binaries" ]; then umount "$1/.build.binaries"; rmdir "$1/.build.binaries"; fi'

    # mmdebstrap trips up if there is no resolv.conf
    if [ ! -e /etc/resolv.conf ]; then
        touch /etc/resolv.conf
    fi

    # create an empty file to avoid an error when dumping the sources
    touch /etc/apt/sources.list.d/dummy
    
    echo "I: Creating sandbox in $R arch=$ARCH"
    mkdir -p config/include.chroot/cli-sandbox
    if [ -x /usr/bin/mmdebstrap ]; then
	echo "I: bootstraping sandbox"
	# shellcheck disable=SC2086
       	cat /etc/apt/sources.list /etc/apt/sources.list.d/* \
           | sed 's/file:/[trusted=yes] copy:/g' \
           | mmdebstrap --essential-hook="${ess_hook}" --customize-hook="${cus_hook}" ${opts} "${DIST}" "${R}" -
       	# Now clean up cli-sandbox
       	chroot "$R" apt-get clean
    fi
    rm -f /etc/apt/sources.list.d/dummy
    echo "I: End Sandbox"
}

# TBD: should take this from a package-list
SANDBOX_ROOT=/var/lib/sandbox
INCLUDES="vyatta-op-shell,vyatta-config-shell,vyatta-bash,bash-completion,openssh-client,vyatta-netconf-agent,vcli,locales"

echo "I: Runing Hook $0"
check_user_isolation || { echo "Skipping user isolation"; exit 0; }
hook_mmdebstrap install
cli_sandbox $SANDBOX_ROOT $INCLUDES
hook_mmdebstrap uninstall
echo "I: End Hook $0"
